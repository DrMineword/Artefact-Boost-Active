(() => {
  const base64Zip = "UEsDBBQAAAAAAMylnFkMgul+kBEAAJARAAAHAAAAT0ZMLnR4dENvcHlyaWdodCAyMDE3LTIwMTkgVGhlIExpYnJlIEJhcmNvZGUgUHJvamVjdCBBdXRob3JzIChodHRwczovL2dpdGh1Yi5jb20vZ3JhcGhpY29yZS9saWJyZWJhcmNvZGUpDQoNClRoaXMgRm9udCBTb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgU0lMIE9wZW4gRm9udCBMaWNlbnNlLCBWZXJzaW9uIDEuMS4NClRoaXMgbGljZW5zZSBpcyBjb3BpZWQgYmVsb3csIGFuZCBpcyBhbHNvIGF2YWlsYWJsZSB3aXRoIGEgRkFRIGF0Og0KaHR0cHM6Ly9vcGVuZm9udGxpY2Vuc2Uub3JnDQoNCg0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NClNJTCBPUEVOIEZPTlQgTElDRU5TRSBWZXJzaW9uIDEuMSAtIDI2IEZlYnJ1YXJ5IDIwMDcNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQoNClBSRUFNQkxFDQpUaGUgZ29hbHMgb2YgdGhlIE9wZW4gRm9udCBMaWNlbnNlIChPRkwpIGFyZSB0byBzdGltdWxhdGUgd29ybGR3aWRlDQpkZXZlbG9wbWVudCBvZiBjb2xsYWJvcmF0aXZlIGZvbnQgcHJvamVjdHMsIHRvIHN1cHBvcnQgdGhlIGZvbnQgY3JlYXRpb24NCmVmZm9ydHMgb2YgYWNhZGVtaWMgYW5kIGxpbmd1aXN0aWMgY29tbXVuaXRpZXMsIGFuZCB0byBwcm92aWRlIGEgZnJlZSBhbmQNCm9wZW4gZnJhbWV3b3JrIGluIHdoaWNoIGZvbnRzIG1heSBiZSBzaGFyZWQgYW5kIGltcHJvdmVkIGluIHBhcnRuZXJzaGlwDQp3aXRoIG90aGVycy4NCg0KVGhlIE9GTCBhbGxvd3MgdGhlIGxpY2Vuc2VkIGZvbnRzIHRvIGJlIHVzZWQsIHN0dWRpZWQsIG1vZGlmaWVkIGFuZA0KcmVkaXN0cmlidXRlZCBmcmVlbHkgYXMgbG9uZyBhcyB0aGV5IGFyZSBub3Qgc29sZCBieSB0aGVtc2VsdmVzLiBUaGUNCmZvbnRzLCBpbmNsdWRpbmcgYW55IGRlcml2YXRpdmUgd29ya3MsIGNhbiBiZSBidW5kbGVkLCBlbWJlZGRlZCwgDQpyZWRpc3RyaWJ1dGVkIGFuZC9vciBzb2xkIHdpdGggYW55IHNvZnR3YXJlIHByb3ZpZGVkIHRoYXQgYW55IHJlc2VydmVkDQpuYW1lcyBhcmUgbm90IHVzZWQgYnkgZGVyaXZhdGl2ZSB3b3Jrcy4gVGhlIGZvbnRzIGFuZCBkZXJpdmF0aXZlcywNCmhvd2V2ZXIsIGNhbm5vdCBiZSByZWxlYXNlZCB1bmRlciBhbnkgb3RoZXIgdHlwZSBvZiBsaWNlbnNlLiBUaGUNCnJlcXVpcmVtZW50IGZvciBmb250cyB0byByZW1haW4gdW5kZXIgdGhpcyBsaWNlbnNlIGRvZXMgbm90IGFwcGx5DQp0byBhbnkgZG9jdW1lbnQgY3JlYXRlZCB1c2luZyB0aGUgZm9udHMgb3IgdGhlaXIgZGVyaXZhdGl2ZXMuDQoNCkRFRklOSVRJT05TDQoiRm9udCBTb2Z0d2FyZSIgcmVmZXJzIHRvIHRoZSBzZXQgb2YgZmlsZXMgcmVsZWFzZWQgYnkgdGhlIENvcHlyaWdodA0KSG9sZGVyKHMpIHVuZGVyIHRoaXMgbGljZW5zZSBhbmQgY2xlYXJseSBtYXJrZWQgYXMgc3VjaC4gVGhpcyBtYXkNCmluY2x1ZGUgc291cmNlIGZpbGVzLCBidWlsZCBzY3JpcHRzIGFuZCBkb2N1bWVudGF0aW9uLg0KDQoiUmVzZXJ2ZWQgRm9udCBOYW1lIiByZWZlcnMgdG8gYW55IG5hbWVzIHNwZWNpZmllZCBhcyBzdWNoIGFmdGVyIHRoZQ0KY29weXJpZ2h0IHN0YXRlbWVudChzKS4NCg0KIk9yaWdpbmFsIFZlcnNpb24iIHJlZmVycyB0byB0aGUgY29sbGVjdGlvbiBvZiBGb250IFNvZnR3YXJlIGNvbXBvbmVudHMgYXMNCmRpc3RyaWJ1dGVkIGJ5IHRoZSBDb3B5cmlnaHQgSG9sZGVyKHMpLg0KDQoiTW9kaWZpZWQgVmVyc2lvbiIgcmVmZXJzIHRvIGFueSBkZXJpdmF0aXZlIG1hZGUgYnkgYWRkaW5nIHRvLCBkZWxldGluZywNCm9yIHN1YnN0aXR1dGluZyAtLSBpbiBwYXJ0IG9yIGluIHdob2xlIC0tIGFueSBvZiB0aGUgY29tcG9uZW50cyBvZiB0aGUNCk9yaWdpbmFsIFZlcnNpb24sIGJ5IGNoYW5naW5nIGZvcm1hdHMgb3IgYnkgcG9ydGluZyB0aGUgRm9udCBTb2Z0d2FyZSB0byBhDQpuZXcgZW52aXJvbm1lbnQuDQoNCiJBdXRob3IiIHJlZmVycyB0byBhbnkgZGVzaWduZXIsIGVuZ2luZWVyLCBwcm9ncmFtbWVyLCB0ZWNobmljYWwNCndyaXRlciBvciBvdGhlciBwZXJzb24gd2hvIGNvbnRyaWJ1dGVkIHRvIHRoZSBGb250IFNvZnR3YXJlLg0KDQpQRVJNSVNTSU9OICYgQ09ORElUSU9OUw0KUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nDQphIGNvcHkgb2YgdGhlIEZvbnQgU29mdHdhcmUsIHRvIHVzZSwgc3R1ZHksIGNvcHksIG1lcmdlLCBlbWJlZCwgbW9kaWZ5LA0KcmVkaXN0cmlidXRlLCBhbmQgc2VsbCBtb2RpZmllZCBhbmQgdW5tb2RpZmllZCBjb3BpZXMgb2YgdGhlIEZvbnQNClNvZnR3YXJlLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoNCg0KMSkgTmVpdGhlciB0aGUgRm9udCBTb2Z0d2FyZSBub3IgYW55IG9mIGl0cyBpbmRpdmlkdWFsIGNvbXBvbmVudHMsDQppbiBPcmlnaW5hbCBvciBNb2RpZmllZCBWZXJzaW9ucywgbWF5IGJlIHNvbGQgYnkgaXRzZWxmLg0KDQoyKSBPcmlnaW5hbCBvciBNb2RpZmllZCBWZXJzaW9ucyBvZiB0aGUgRm9udCBTb2Z0d2FyZSBtYXkgYmUgYnVuZGxlZCwNCnJlZGlzdHJpYnV0ZWQgYW5kL29yIHNvbGQgd2l0aCBhbnkgc29mdHdhcmUsIHByb3ZpZGVkIHRoYXQgZWFjaCBjb3B5DQpjb250YWlucyB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBsaWNlbnNlLiBUaGVzZSBjYW4gYmUNCmluY2x1ZGVkIGVpdGhlciBhcyBzdGFuZC1hbG9uZSB0ZXh0IGZpbGVzLCBodW1hbi1yZWFkYWJsZSBoZWFkZXJzIG9yDQppbiB0aGUgYXBwcm9wcmlhdGUgbWFjaGluZS1yZWFkYWJsZSBtZXRhZGF0YSBmaWVsZHMgd2l0aGluIHRleHQgb3INCmJpbmFyeSBmaWxlcyBhcyBsb25nIGFzIHRob3NlIGZpZWxkcyBjYW4gYmUgZWFzaWx5IHZpZXdlZCBieSB0aGUgdXNlci4NCg0KMykgTm8gTW9kaWZpZWQgVmVyc2lvbiBvZiB0aGUgRm9udCBTb2Z0d2FyZSBtYXkgdXNlIHRoZSBSZXNlcnZlZCBGb250DQpOYW1lKHMpIHVubGVzcyBleHBsaWNpdCB3cml0dGVuIHBlcm1pc3Npb24gaXMgZ3JhbnRlZCBieSB0aGUgY29ycmVzcG9uZGluZw0KQ29weXJpZ2h0IEhvbGRlci4gVGhpcyByZXN0cmljdGlvbiBvbmx5IGFwcGxpZXMgdG8gdGhlIHByaW1hcnkgZm9udCBuYW1lIGFzDQpwcmVzZW50ZWQgdG8gdGhlIHVzZXJzLg0KDQo0KSBUaGUgbmFtZShzKSBvZiB0aGUgQ29weXJpZ2h0IEhvbGRlcihzKSBvciB0aGUgQXV0aG9yKHMpIG9mIHRoZSBGb250DQpTb2Z0d2FyZSBzaGFsbCBub3QgYmUgdXNlZCB0byBwcm9tb3RlLCBlbmRvcnNlIG9yIGFkdmVydGlzZSBhbnkNCk1vZGlmaWVkIFZlcnNpb24sIGV4Y2VwdCB0byBhY2tub3dsZWRnZSB0aGUgY29udHJpYnV0aW9uKHMpIG9mIHRoZQ0KQ29weXJpZ2h0IEhvbGRlcihzKSBhbmQgdGhlIEF1dGhvcihzKSBvciB3aXRoIHRoZWlyIGV4cGxpY2l0IHdyaXR0ZW4NCnBlcm1pc3Npb24uDQoNCjUpIFRoZSBGb250IFNvZnR3YXJlLCBtb2RpZmllZCBvciB1bm1vZGlmaWVkLCBpbiBwYXJ0IG9yIGluIHdob2xlLA0KbXVzdCBiZSBkaXN0cmlidXRlZCBlbnRpcmVseSB1bmRlciB0aGlzIGxpY2Vuc2UsIGFuZCBtdXN0IG5vdCBiZQ0KZGlzdHJpYnV0ZWQgdW5kZXIgYW55IG90aGVyIGxpY2Vuc2UuIFRoZSByZXF1aXJlbWVudCBmb3IgZm9udHMgdG8NCnJlbWFpbiB1bmRlciB0aGlzIGxpY2Vuc2UgZG9lcyBub3QgYXBwbHkgdG8gYW55IGRvY3VtZW50IGNyZWF0ZWQNCnVzaW5nIHRoZSBGb250IFNvZnR3YXJlLg0KDQpURVJNSU5BVElPTg0KVGhpcyBsaWNlbnNlIGJlY29tZXMgbnVsbCBhbmQgdm9pZCBpZiBhbnkgb2YgdGhlIGFib3ZlIGNvbmRpdGlvbnMgYXJlDQpub3QgbWV0Lg0KDQpESVNDTEFJTUVSDQpUSEUgRk9OVCBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELA0KRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIEFOWSBXQVJSQU5USUVTIE9GDQpNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQNCk9GIENPUFlSSUdIVCwgUEFURU5ULCBUUkFERU1BUkssIE9SIE9USEVSIFJJR0hULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUNCkNPUFlSSUdIVCBIT0xERVIgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLA0KSU5DTFVESU5HIEFOWSBHRU5FUkFMLCBTUEVDSUFMLCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgT1IgQ09OU0VRVUVOVElBTA0KREFNQUdFUywgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HDQpGUk9NLCBPVVQgT0YgVEhFIFVTRSBPUiBJTkFCSUxJVFkgVE8gVVNFIFRIRSBGT05UIFNPRlRXQVJFIE9SIEZST00NCk9USEVSIERFQUxJTkdTIElOIFRIRSBGT05UIFNPRlRXQVJFLg0KUEsDBBQAAAAAAPIKDVlYrYT17DkAAOw5AAAaAAAATGlicmVCYXJjb2RlMzktUmVndWxhci50dGYAAQAAAA8AgAADAHBHU1VCqDq5LwAAAbgAAABET1MvMlKK8SIAAAH8AAAAYGNtYXAnkiflAAADBAAAALxjdnQgC/4HGgAAAYAAAAA4ZnBnbWIu+3sAAA8cAAAODGdhc3AAAAAQAAAA/AAAAAhnbHlmimWifQAAHSgAABzEaGVhZBjjZsQAAAFIAAAANmhoZWEEHAD7AAABJAAAACRobXR423QAMgAABLQAAAHibG9jYXTifC4AAAPAAAAA9G1heHABhg58AAABBAAAACBuYW1lVUVs1QAABpgAAAOgcG9zdAGbXSQAAAo4AAAE4nByZXDqSMqeAAACXAAAAKcAAQAB//8ADwABAAAAeQAUAAUAFAAFAAIAHgBFAI0AAABWDgwAAQABAAEAAAJY/nAAAAH0AAAAHgHCAAEAAAAAAAAAAAAAAAAAAAB4AAEAAAABAUgmpRinXw889QAPA+gAAAAA2/8R4wAAAADb/xHuAAD+cAHCAlgAAAAGAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAB4AWgASAk4CTgJOAAACTgJOAAAAAAJOAAACTgJOAAAAAAABAAAACgAeACwAAURGTFQACAAEAAAAAP//AAEAAAABY2FsdAAIAAAAAQAAAAEABAABAAAAAQAIAAEABgBHAAEAAQAvAAQB4AGQAAUAAAKKAlgAAABLAooCWAAAAV4AMgDwAAAAAAAAAAAAAAAAgAAAAwAAAAAAAAAAAAAAAEdSQ1IAQAAAIAwCWP5wAAACWAGQAAAAAQAAAAABkAJOAAAAIAABAEu4AMhSWLEBAY5ZsAG5CAAIAGNwsQAHQrIZAQAqsQAHQrMOCAEKKrEAB0KzFgYBCiqxAAhCugPAAAEACyqxAAlCugBAAAEACyq5AAMAAESxJAGIUViwQIhYuQADAGREsSgBiFFYuAgAiFi5AAMAAERZG7EnAYhRWLoIgAABBECIY1RYuQADAABEWVlZWVmzEAYBDiq4Af+FsASNsQIARLMFZAYAREQAAAAAAgAAAAMAAAAUAAMAAQAAABQABACoAAAAGAAQAAMACAAAAA0AIAAlACsAOQBaAHoAoADCIAz//wAAAAAADQAgACQAKgAtAEEAYQCgAMIgC///AAL/9AAPAAwACAAHAAD/+v/V/7QAAAABAAAAAAAAAAAAAAAAAAwAAAAAAAAAOAAAAEEAQgBDAEQARQBGAEcASABJAEoASwBMAE0ATgBPAFAAUQBSAFMAVABVAFYAVwBYAFkAWgB4AHcAAAAqACoAKgBwALYA/AFCAYgBzgIUAloCoALmAywDcgO4A/4ERASKBNAFFgVcBaIF6AYuBnQGugcAB0YHjAfSCBgIXgikCOoJMAl2CbwKAgpICo4K1AsaC2ALpgvsDDIMMgw6DEIMSgxSDFoMYgxqDHIMegyCDIoMkgyaDKIMqgyyDLoMwgzKDNIM2gziDOoM8gz6DQINCg0SDRoNIg0qDTINOg1CDUoNUg1aDWINag1yDXoNgg2KDZINmg2iDaoNsg26DcINyg3SDdoN4g3qDfIN+g4CDgoOEg4aDiIOKg4yDjoOQg5KDlIOWg5aDmIOYg5iAfQAMgAAAAAAAAAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAAAAAAAAAAAAAAAAkAcgADAAEECQAAAMQCagADAAEECQABACACSgADAAEECQACAA4CPAADAAEECQADAEIB+gADAAEECQAEADABygADAAEECQAFAEYBhAADAAEECQAGACwBWAADAAEECQANASIANgADAAEECQAOADYAAABoAHQAdABwAHMAOgAvAC8AcwBjAHIAaQBwAHQAcwAuAHMAaQBsAC4AbwByAGcALwBPAEYATABUAGgAaQBzACAARgBvAG4AdAAgAFMAbwBmAHQAdwBhAHIAZQAgAGkAcwAgAGwAaQBjAGUAbgBzAGUAZAAgAHUAbgBkAGUAcgAgAHQAaABlACAAUwBJAEwAIABPAHAAZQBuACAARgBvAG4AdAAgAEwAaQBjAGUAbgBzAGUALAAgAFYAZQByAHMAaQBvAG4AIAAxAC4AMQAuACAAVABoAGkAcwAgAGwAaQBjAGUAbgBzAGUAIABpAHMAIABhAHYAYQBpAGwAYQBiAGwAZQAgAHcAaQB0AGgAIABhACAARgBBAFEAIABhAHQAOgAgAGgAdAB0AHAAcwA6AC8ALwBzAGMAcgBpAHAAdABzAC4AcwBpAGwALgBvAHIAZwAvAE8ARgBMAEwAaQBiAHIAZQBCAGEAcgBjAG8AZABlADMAOQAtAFIAZQBnAHUAbABhAHIAVgBlAHIAcwBpAG8AbgAgADEALgAwADAANQA7ACAAdAB0AGYAYQB1AHQAbwBoAGkAbgB0ACAAKAB2ADEALgA4AC4AMwApAEwAaQBiAHIAZQAgAEIAYQByAGMAbwBkAGUAIAAzADkAIABSAGUAZwB1AGwAYQByADEALgAwADAANQA7AEcAUgBDAFIAOwBMAGkAYgByAGUAQgBhAHIAYwBvAGQAZQAzADkALQBSAGUAZwB1AGwAYQByAFIAZQBnAHUAbABhAHIATABpAGIAcgBlACAAQgBhAHIAYwBvAGQAZQAgADMAOQBDAG8AcAB5AHIAaQBnAGgAdAAgADIAMAAxADcALQAyADAAMgAwACAAVABoAGUAIABMAGkAYgByAGUAIABCAGEAcgBjAG8AZABlACAAUAByAG8AagBlAGMAdAAgAEEAdQB0AGgAbwByAHMAIAAoAGgAdAB0AHAAcwA6AC8ALwBnAGkAdABoAHUAYgAuAGMAbwBtAC8AZwByAGEAcABoAGkAYwBvAHIAZQAvAGwAaQBiAHIAZQBiAGEAcgBjAG8AZABlACkAAgAAAAAAAP+1ADIAAAAAAAAAAAAAAAAAAAAAAAAAAAB5AAABAgEDAQQBBQEGAQcBCAEJAQoBCwEMAQ0BDgEPARABEQESARMBFAEVARYBFwEYARkBGgEbARwBHQEeAR8BIAEhASIBIwEkASUBJgEnASgBKQEqASsBLAEtAS4BLwEwATEBMgEzATQBNQE2ATcBOAE5AToBOwE8AT0BPgE/AUABQQFCAUMBRAFFAUYBRwFIAUkBSgFLAUwBTQFOAU8BUAFRAVIBUwFUAVUBVgFXAVgBWQFaAVsBXAFdAV4BXwFgAWEBYgFjAWQBZQFmAWcBaAFpAWoBawFsAW0BbgFvAXABcQFyAXMBdAF1AXYBdwF4AXkCQ1IETlVMTAZjb2RlLkEGY29kZS5CBmNvZGUuQwZjb2RlLkQGY29kZS5FBmNvZGUuRgZjb2RlLkcGY29kZS5IBmNvZGUuSQZjb2RlLkoGY29kZS5LBmNvZGUuTAZjb2RlLk0GY29kZS5OBmNvZGUuTwZjb2RlLlAGY29kZS5RBmNvZGUuUgZjb2RlLlMGY29kZS5UBmNvZGUuVQZjb2RlLlYGY29kZS5XBmNvZGUuWAZjb2RlLlkGY29kZS5aC2NvZGUuZG9sbGFyCmNvZGUuZWlnaHQJY29kZS5maXZlCWNvZGUuZm91cgpjb2RlLm1pbnVzCWNvZGUubmluZQhjb2RlLm9uZQxjb2RlLnBlcmNlbnQLY29kZS5wZXJpb2QJY29kZS5wbHVzCmNvZGUuc2V2ZW4IY29kZS5zaXgKY29kZS5zbGFzaApjb2RlLnNwYWNlDmNvZGUuc3RhcnRzdG9wCmNvZGUudGhyZWUIY29kZS50d28JY29kZS56ZXJvB3VuaTAwMjAHdW5pMDAyNAd1bmkwMDI1B3VuaTAwMkEHdW5pMDAyQgd1bmkwMDJEB3VuaTAwMkUHdW5pMDAyRgd1bmkwMDMwB3VuaTAwMzEHdW5pMDAzMgd1bmkwMDMzB3VuaTAwMzQHdW5pMDAzNQd1bmkwMDM2B3VuaTAwMzcHdW5pMDAzOAd1bmkwMDM5B3VuaTAwNDEHdW5pMDA0Mgd1bmkwMDQzB3VuaTAwNDQHdW5pMDA0NQd1bmkwMDQ2B3VuaTAwNDcHdW5pMDA0OAd1bmkwMDQ5B3VuaTAwNEEHdW5pMDA0Qgd1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"; // Replace with your actual base64 string

  // Function to dynamically load JSZip
  function loadJSZip() {
    return new Promise((resolve, reject) => {
      const existingScript = document.querySelector('script[src="https://cdn.jsdelivr.net/npm/jszip@3.10.1/dist/jszip.min.js"]');
      if (existingScript) {
        console.log('JSZip is already loaded.');
        return resolve();
      }

      const script = document.createElement('script');
      script.src = "https://cdn.jsdelivr.net/npm/jszip@3.10.1/dist/jszip.min.js";
      script.onload = resolve;
      script.onerror = reject;
      document.head.appendChild(script);
    });
  }

  // Function to check if the base64 string is a ZIP file
  function isZipFile(base64Data) {
    const binaryString = atob(base64Data.slice(0, 100)); // Decode a portion of the base64 string
    const zipSignature = [80, 75, 3, 4]; // PK\x03\x04
    return zipSignature.every((byte, index) => binaryString.charCodeAt(index) === byte);
  }

  // Function to process ZIP file
  async function processZip(base64Data) {
    console.log('Processing as ZIP file...');

    // Convert base64 to binary
    const binaryString = atob(base64Data);
    const byteArray = new Uint8Array(binaryString.length);
    for (let i = 0; i < binaryString.length; i++) {
      byteArray[i] = binaryString.charCodeAt(i);
    }

    // Use JSZip to unzip
    const zip = await JSZip.loadAsync(byteArray);

    // Extract font and .txt file
    let fontBlob, txtContent;
    await Promise.all(
      Object.keys(zip.files).map(async (fileName) => {
        if (fileName.endsWith('.ttf') || fileName.endsWith('.woff') || fileName.endsWith('.woff2')) {
          console.log(`Found font file: ${fileName}`);
          fontBlob = await zip.files[fileName].async('blob');
        } else if (fileName.endsWith('.txt')) {
          console.log(`Found text file: ${fileName}`);
          txtContent = await zip.files[fileName].async('string');
        }
      })
    );

    // Print .txt file content
    if (txtContent) {
      console.log('TXT Content:', txtContent);
    } else {
      console.warn('No .txt file found in the ZIP.');
    }

    // Load the font
    if (fontBlob) {
      const fontUrl = URL.createObjectURL(fontBlob);
      const fontFace = new FontFace('DynamicFont', `url(${fontUrl})`);
      document.fonts.add(fontFace);

      // Apply the font to the body
      fontFace.load().then(() => {
        document.body.style.fontFamily = 'DynamicFont, sans-serif';
        console.log('Font loaded and applied successfully.');
      });
    } else {
      console.warn('No font file found in the ZIP.');
    }
  }

  // Function to process a standalone font file
  function processFont(base64Data) {
    console.log('Processing as standalone font file...');

    const binaryString = atob(base64Data);
    const byteArray = new Uint8Array(binaryString.length);
    for (let i = 0; i < binaryString.length; i++) {
      byteArray[i] = binaryString.charCodeAt(i);
    }

    const fontBlob = new Blob([byteArray]);
    const fontUrl = URL.createObjectURL(fontBlob);
    const fontFace = new FontFace('DynamicFont', `url(${fontUrl})`);
    document.fonts.add(fontFace);

    // Apply the font to the body
    fontFace.load().then(() => {
      document.body.style.fontFamily = 'DynamicFont, sans-serif';
      console.log('Font loaded and applied successfully.');
    });
  }

  // Main function to determine and process the input
  async function processBase64(base64Data) {
    try {
      if (isZipFile(base64Data)) {
        console.log('Detected ZIP file format.');
        await processZip(base64Data);
      } else {
        console.log('Detected standalone font file format.');
        processFont(base64Data);
      }
    } catch (error) {
      console.error('Error during processing:', error);
    }
  }

  // Load JSZip and process the base64 data
  loadJSZip()
    .then(() => {
      console.log('JSZip loaded successfully.');
      processBase64(base64Zip);
    })
    .catch((err) => {
      console.error('Failed to load JSZip:', err);
    })
    .finally(() => {
      console.log('Clearing base64Zip and other variables.');
      // Clear variables to avoid re-declaration issues
      window.base64Zip = undefined;
    });
})();
