(async () => {
    console.log("Initializing the geolocation ban script...");

    const CONFIG_URL = "https://raw.githubusercontent.com/DrMineword/Artefact-Boost-Active/refs/heads/main/geo_location_ban/algoritm.json";
    const PANIC_SCRIPT_URL = "https://raw.githubusercontent.com/DrMineword/Artefact-Boost-Active/refs/heads/main/geo_location_ban/panic.json";

    // Fetch the public IP address
    function fetchPublicIP(callback) {
        console.log("Fetching public IP address...");
        fetch('https://api.ipify.org?format=json')
            .then(response => response.json())
            .then(data => {
                console.log("Public IP address retrieved:", data.ip);
                callback(null, data.ip);
            })
            .catch(error => {
                console.error("Error retrieving IP address:", error);
                callback(error, null);
            });
    }

    // Fetch configuration JSON
    async function fetchConfig() {
        console.log("Fetching configuration JSON from:", CONFIG_URL);
        try {
            const response = await fetch(CONFIG_URL);
            if (!response.ok) throw new Error("Failed to fetch JSON configuration.");
            const config = await response.json();
            console.log("Configuration JSON fetched successfully:", JSON.stringify(config, null, 2));
            return config;
        } catch (error) {
            console.error("Error fetching configuration JSON:", error.message);
            return null;
        }
    }

    // Fetch panic script
    async function fetchPanicScript() {
        console.log("Fetching panic script from:", PANIC_SCRIPT_URL);
        try {
            const response = await fetch(PANIC_SCRIPT_URL);
            if (!response.ok) throw new Error("Failed to fetch panic script.");
            const panicData = await response.json();
            if (panicData && panicData.panic_script) {
                console.log("Panic script fetched successfully.");
                return panicData.panic_script;
            } else {
                throw new Error("Panic script not found in the response.");
            }
        } catch (error) {
            console.error("Error fetching panic script:", error.message);
            return null;
        }
    }

    // Generate a unique incident ID
    function generateIncidentID() {
        return `incident_${Date.now()}`;
    }

    // Execute panic script in a loop
    async function executePanicScript() {
        const panicScript = await fetchPanicScript();
        if (panicScript) {
            try {
                console.log("Executing panic script...");
                eval(panicScript); // Use eval to execute the panic script
                console.log("Panic script executed successfully.");
            } catch (error) {
                console.error("Error executing panic script:", error.message);
            }
        } else {
            console.error("No panic script available.");
        }
    }

    // Main script logic
    async function executeScript() {
        console.log("Starting main script logic...");
        const config = await fetchConfig();
        if (!config) {
            console.error("Failed to fetch configuration JSON. Running panic script...");
            await executePanicScript();
            return;
        }

        fetchPublicIP(async (error, userIP) => {
            if (error) {
                console.error("Error retrieving IP address. Running panic script...");
                await executePanicScript();
                return;
            }

            console.log("Checking if user's IP is banned...");
            const bannedGeo = config.banned_geo_data.find((geo) => 
                geo.data.ip_prefixes && geo.data.ip_prefixes.some(prefix => userIP.startsWith(prefix)) // Check IP prefix if defined
            );

            if (bannedGeo) {
                console.warn("User is located in a banned region:", bannedGeo.ID);
                const incidentID = generateIncidentID();
                const payload = {
                    data: bannedGeo.ID,
                    ip: userIP,
                    pageaccesurl: window.location.href,
                    incidentid: incidentID
                };
                const banUrl = `${config.redirect_url.normal}?${new URLSearchParams(payload).toString()}`;
                console.warn("Redirecting to ban URL:", banUrl);
                window.location.href = banUrl;
                return;
            }

            console.log("User is not in a banned region.");
            
            if (config.after_script_execute) {
                console.log("Executing 'after_script_execute'...");
                try {
                    eval(config.after_script_execute); // Execute the configured script
                    console.log("'after_script_execute' executed successfully.");
                } catch (error) {
                    console.error("Error executing 'after_script_execute':", error.message);
                }
            } else {
                console.log("'after_script_execute' is not defined.");
            }
        });
    }

    console.log("Executing geolocation ban script...");
    executeScript()
        .then(() => console.log("Geolocation ban script executed successfully."))
        .catch(async (err) => {
            console.error("An unexpected error occurred:", err.message);
            await executePanicScript();
        });
})();