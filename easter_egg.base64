ZnVuY3Rpb24gc3RhcnRTbm93RWZmZWN0KHsgc25vd2ZsYWtlQ291bnQgPSAxNTAsIGxpZ2h0VGhyZXNob2xkID0gMTkwIH0gPSB7fSkgewogIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpOwogIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY2FudmFzKTsKCiAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7CiAgaWYgKCFjdHgpIHsKICAgIGNvbnNvbGUuZXJyb3IoIkVycm9yOiBVbmFibGUgdG8gZ2V0IDJEIHJlbmRlcmluZyBjb250ZXh0LiIpOwogICAgdGhyb3cgbmV3IEVycm9yKCJDYW52YXMgcmVuZGVyaW5nIGNvbnRleHQgaXMgbm90IHN1cHBvcnRlZC4iKTsKICB9CgogIGxldCB3aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoOwogIGxldCBoZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7CiAgY2FudmFzLndpZHRoID0gd2lkdGg7CiAgY2FudmFzLmhlaWdodCA9IGhlaWdodDsKCiAgLy8gQ2FudmFzIHN0eWxlIHNldHRpbmdzCiAgY2FudmFzLnN0eWxlLnpJbmRleCA9ICcyNSc7CiAgY2FudmFzLnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnbm9uZSc7CiAgY2FudmFzLnN0eWxlLnBvc2l0aW9uID0gJ2ZpeGVkJzsKCiAgY29uc3Qgc25vd2ZsYWtlcyA9IFtdOwogIGxldCBhbmltYXRpb25JZDsKCiAgLy8gVXRpbGl0eSBmdW5jdGlvbiB0byBjaGVjayBicmlnaHRuZXNzIG9mIHRoZSBiYWNrZ3JvdW5kIHVuZGVyIGEgc25vd2ZsYWtlCiAgZnVuY3Rpb24gaXNMaWdodEJhY2tncm91bmQoeCwgeSkgewogICAgdHJ5IHsKICAgICAgaWYgKHggPCAwIHx8IHggPj0gd2lkdGggfHwgeSA8IDAgfHwgeSA-PSBoZWlnaHQpIHJldHVybiBmYWxzZTsKCiAgICAgIGNvbnN0IGltYWdlRGF0YSA9IGN0eC5nZXRJbWFnZURhdGEoeCwgeSwgMSwgMSkuZGF0YTsKICAgICAgY29uc3QgYnJpZ2h0bmVzcyA9IChpbWFnZURhdGFbMF0gKyBpbWFnZURhdGFbMV0gKyBpbWFnZURhdGFbMl0pIC8gMzsKICAgICAgcmV0dXJuIGJyaWdodG5lc3MgPiBsaWdodFRocmVzaG9sZDsKICAgIH0gY2F0Y2ggKGVycikgewogICAgICBjb25zb2xlLmVycm9yKCJFcnJvciBpbiBpc0xpZ2h0QmFja2dyb3VuZDoiLCBlcnIpOwogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgfQoKICAvLyBTbm93Zmxha2UgY2xhc3MKICBjbGFzcyBTbm93Zmxha2UgewogICAgY29uc3RydWN0b3IoKSB7CiAgICAgIHRoaXMueCA9IE1hdGgucmFuZG9tKCkgKiB3aWR0aDsKICAgICAgdGhpcy55ID0gTWF0aC5yYW5kb20oKSAqIGhlaWdodDsKICAgICAgdGhpcy5yYWRpdXMgPSBNYXRoLnJhbmRvbSgpICogMyArIDE7CiAgICAgIHRoaXMuc3BlZWRYID0gTWF0aC5yYW5kb20oKSAqIDIgLSAxOwogICAgICB0aGlzLnNwZWVkWSA9IE1hdGgucmFuZG9tKCkgKiAyICsgMTsKICAgIH0KCiAgICB1cGRhdGUoKSB7CiAgICAgIHRoaXMueCArPSB0aGlzLnNwZWVkWDsKICAgICAgdGhpcy55ICs9IHRoaXMuc3BlZWRZOwoKICAgICAgaWYgKHRoaXMueCA-IHdpZHRoKSB0aGlzLnggPSAwOwogICAgICBpZiAodGhpcy54IDwgMCkgdGhpcy54ID0gd2lkdGg7CiAgICAgIGlmICh0aGlzLnkgPiBoZWlnaHQpIHRoaXMueSA9IDA7CiAgICB9CgogICAgZHJhdygpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCBvdXRsaW5lID0gaXNMaWdodEJhY2tncm91bmQodGhpcy54LCB0aGlzLnkpID8gJ2JsYWNrJyA6ICd0cmFuc3BhcmVudCc7CgogICAgICAgIGN0eC5iZWdpblBhdGgoKTsKICAgICAgICBjdHguYXJjKHRoaXMueCwgdGhpcy55LCB0aGlzLnJhZGl1cywgMCwgTWF0aC5QSSAqIDIpOwogICAgICAgIGN0eC5maWxsU3R5bGUgPSAnd2hpdGUnOwogICAgICAgIGN0eC5maWxsKCk7CiAgICAgICAgaWYgKG91dGxpbmUgIT09ICd0cmFuc3BhcmVudCcpIHsKICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IG91dGxpbmU7CiAgICAgICAgICBjdHgubGluZVdpZHRoID0gMC41OwogICAgICAgICAgY3R4LnN0cm9rZSgpOwogICAgICAgIH0KICAgICAgICBjdHguY2xvc2VQYXRoKCk7CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoIkVycm9yIGluIGRyYXcgbWV0aG9kOiIsIGVycik7CiAgICAgIH0KICAgIH0KICB9CgogIC8vIEluaXRpYWxpemUgc25vd2ZsYWtlcwogIGZ1bmN0aW9uIGNyZWF0ZVNub3dmbGFrZXMoKSB7CiAgICBzbm93Zmxha2VzLmxlbmd0aCA9IDA7CiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNub3dmbGFrZUNvdW50OyBpKyspIHsKICAgICAgc25vd2ZsYWtlcy5wdXNoKG5ldyBTbm93Zmxha2UoKSk7CiAgICB9CiAgfQoKICAvLyBSZXNpemUgY2FudmFzIG9uIHdpbmRvdyByZXNpemUKICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgKCkgPT4gewogICAgdHJ5IHsKICAgICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUoYW5pbWF0aW9uSWQpOyAvLyBTdG9wIG9uZ29pbmcgYW5pbWF0aW9uCiAgICAgIHdpZHRoID0gd2luZG93LmlubmVyV2lkdGg7CiAgICAgIGhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDsKICAgICAgY2FudmFzLndpZHRoID0gd2lkdGg7CiAgICAgIGNhbnZhcy5oZWlnaHQgPSBoZWlnaHQ7CiAgICAgIGNyZWF0ZVNub3dmbGFrZXMoKTsgLy8gUmVjcmVhdGUgc25vd2ZsYWtlcwogICAgICBhbmltYXRlKCk7IC8vIFJlc3RhcnQgYW5pbWF0aW9uCiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgY29uc29sZS5lcnJvcigiRXJyb3IgZHVyaW5nIHJlc2l6ZSBldmVudDoiLCBlcnIpOwogICAgfQogIH0pOwoKICAvLyBBbmltYXRpb24gbG9vcAogIGZ1bmN0aW9uIGFuaW1hdGUoKSB7CiAgICB0cnkgewogICAgICBjdHguY2xlYXJSZWN0KDAsIDAsIHdpZHRoLCBoZWlnaHQpOwogICAgICBzbm93Zmxha2VzLmZvckVhY2goKHNub3dmbGFrZSkgPT4gewogICAgICAgIHNub3dmbGFrZS51cGRhdGUoKTsKICAgICAgICBzbm93Zmxha2UuZHJhdygpOwogICAgICB9KTsKICAgICAgYW5pbWF0aW9uSWQgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYW5pbWF0ZSk7CiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgY29uc29sZS5lcnJvcigiRXJyb3IgaW4gYW5pbWF0aW9uIGxvb3A6IiwgZXJyKTsKICAgIH0KICB9CgogIC8vIFN0YXJ0IHRoZSBzbm93IGVmZmVjdAogIHRyeSB7CiAgICBjcmVhdGVTbm93Zmxha2VzKCk7CiAgICBhbmltYXRlKCk7CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBjb25zb2xlLmVycm9yKCJFcnJvciBpbml0aWFsaXppbmcgc25vdyBlZmZlY3Q6IiwgZXJyKTsKICB9CgogIHJldHVybiB7CiAgICBzdG9wOiAoKSA9PiBjYW5jZWxBbmltYXRpb25GcmFtZShhbmltYXRpb25JZCksCiAgICBjYW52YXMsIC8vIEV4cG9zZSBjYW52YXMgaWYgbmVlZGVkIGZvciBjdXN0b21pemF0aW9uCiAgfTsKfQoKCgoKCgoKCgpjb25zdCBzbm93RWZmZWN0ID0gc3RhcnRTbm93RWZmZWN0KHsgCiAgc25vd2ZsYWtlQ291bnQ6IDIwMCwgLy8gT3B0aW9uYWw6IE51bWJlciBvZiBzbm93Zmxha2VzCiAgbGlnaHRUaHJlc2hvbGQ6IDE4MCAgLy8gT3B0aW9uYWw6IEJyaWdodG5lc3MgdGhyZXNob2xkCn0pOwoKCg
