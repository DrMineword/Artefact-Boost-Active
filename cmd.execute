(async function() {
  const EXCLUDED_URL = "https://drmineword.github.io/Artefact-Boost-Active/root/pages/corp/base.html";
  const NOTIF_JSON_URL = "https://raw.githubusercontent.com/DrMineword/Artefact-Boost-Active/refs/heads/main/openmessage.json";
  const CMD_EXECUTE_URL = "https://raw.githubusercontent.com/DrMineword/Artefact-Boost-Active/refs/heads/main/cmd2.execute";

  // Function to get dismissed notifications from localStorage
  function getDismissedNotifications() {
    const dismissed = localStorage.getItem("dismissed_notifications");
    return dismissed ? JSON.parse(dismissed) : [];
  }

  // Function to save dismissed notifications to localStorage
  function saveDismissedNotification(id) {
    const dismissed = getDismissedNotifications();
    if (!dismissed.includes(id)) {
      dismissed.push(id);
      localStorage.setItem("dismissed_notifications", JSON.stringify(dismissed));
    }
  }

  // Function to display notifications
  function showNotification(message, backgroundColor, textColor, id = null, autoDismiss = true, dismissTimeout = 10000) {
    const notifContainer = document.createElement("div");
    notifContainer.innerHTML = `<strong>${message}</strong>`;
    notifContainer.style.cssText = `
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      background-color: ${backgroundColor};
      color: ${textColor};
      padding: 15px;
      z-index: 10000;
      text-align: center;
      font-size: 16px;
    `;

    // Dismiss button
    const dismissBtn = document.createElement("button");
    dismissBtn.textContent = "Dismiss";
    dismissBtn.style.cssText = `
      margin-left: 15px;
      padding: 5px 10px;
      background-color: ${textColor};
      color: ${backgroundColor};
      border: none;
      cursor: pointer;
    `;
    dismissBtn.addEventListener("click", () => {
      notifContainer.remove();
      if (id) saveDismissedNotification(id); // Save dismissed notification ID
    });

    notifContainer.appendChild(dismissBtn);
    document.body.appendChild(notifContainer);

    // Auto-dismiss if required
    if (autoDismiss) {
      setTimeout(() => {
        notifContainer.remove();
        if (id) saveDismissedNotification(id); // Save dismissed notification ID
      }, dismissTimeout);
    }
  }

  // Wait for the document to fully load
  document.addEventListener("DOMContentLoaded", async () => {
    try {
      const currentUrl = window.location.href;

      // Save page content under `page_$current-url`
      const pageContent = document.documentElement.outerHTML;
      const storageKey = `page_${currentUrl}`;
      localStorage.setItem(storageKey, pageContent);

      if (currentUrl !== EXCLUDED_URL) {
        // Retrieve the stored content for change detection
        const storedContent = localStorage.getItem(storageKey);

        if (storedContent && storedContent !== pageContent) {
          console.log("Page content has changed!");
          
          // Fetch messages from the JSON
          const response = await fetch(NOTIF_JSON_URL);
          const notifData = await response.json();

          // Show notification for edit changes using `editmsg` from JSON
          showNotification(notifData.editmsg, "#ff0000", "#ffffff");
        }
      }

      // Fetch notifications
      const response = await fetch(NOTIF_JSON_URL);
      const notifData = await response.json();

      // Current timestamp
      const now = Math.floor(Date.now() / 1000);
      const dismissedNotifications = getDismissedNotifications();

      notifData.data.forEach((notif) => {
        const { id, "html-msg": htmlMsg, "start-show-unix": startShow, "end-show-unix": endShow, colors } = notif;

        // Check if the notification should be shown
        if (now >= startShow && now <= endShow && !dismissedNotifications.includes(id)) {
          showNotification(atob(htmlMsg), colors[0], colors[1], id, false);
        }
      });

      // Fetch and execute the external script
      const cmdScriptResponse = await fetch(CMD_EXECUTE_URL);
      const cmdScript = await cmdScriptResponse.text();
      const scriptElement = document.createElement("script");
      scriptElement.textContent = cmdScript;
      document.body.appendChild(scriptElement);

      console.log("External script executed successfully.");
    } catch (error) {
      console.error("An error occurred:", error);
    }
  });
})();
